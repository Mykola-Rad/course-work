@model IMS.ViewModels.ProductDetailsViewModel
@using IMS.Models
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
	ViewData["Title"] = $"Деталі товару: {Model.Product.ProductName}";
	Layout = "_Layout";
	bool canManage = User.IsInRole(UserRole.manager.ToString()) || User.IsInRole(UserRole.owner.ToString());
	var activeTab = ViewData["ActiveTab"] as string ?? "info";
}

<h1>@ViewData["Title"]</h1>

@if (canManage)
{
	<nav class="mt-3">
		<div class="nav nav-tabs" id="nav-tab" role="tablist">
			<button class="nav-link @(activeTab == "info" ? "active" : "")" id="nav-info-tab" data-bs-toggle="tab" data-bs-target="#nav-info" type="button" role="tab" aria-controls="nav-info" aria-selected="@(activeTab == "info")">Інформація</button>
			<button class="nav-link @(activeTab == "customers" ? "active" : "")" id="nav-customers-tab" data-bs-toggle="tab" data-bs-target="#nav-customers" type="button" role="tab" aria-controls="nav-customers" aria-selected="@(activeTab == "customers")">Покупці</button>
			<button class="nav-link @(activeTab == "suppliers" ? "active" : "")" id="nav-suppliers-tab" data-bs-toggle="tab" data-bs-target="#nav-suppliers" type="button" role="tab" aria-controls="nav-suppliers" aria-selected="@(activeTab == "suppliers")">Постачальники</button>
		</div>
	</nav>

	<div class="tab-content pt-3" id="nav-tabContent">
		<div class="tab-pane fade @(activeTab == "info" ? "show active" : "")" id="nav-info" role="tabpanel" aria-labelledby="nav-info-tab" tabindex="0">
			<h4>Основна інформація</h4>
			<hr />
			@await Html.PartialAsync("_ProductInfoPartial", Model.Product)
			@if (canManage)
			{
				<a asp-action="Edit" asp-route-productName="@Model.Product.ProductName" class="btn btn-secondary">Редагувати</a> <text> | </text>
			}
		</div>

		<div class="tab-pane fade @(activeTab == "customers" ? "show active" : "")" id="nav-customers" role="tabpanel" aria-labelledby="nav-customers-tab" tabindex="0">
			<h4>Контрагенти, що купували цей товар</h4>
			<hr />
			@if (Model.Customers != null && Model.Customers.Any())
			{
				@await Html.PartialAsync("_CounterpartyTablePartial", Model.Customers,
							new ViewDataDictionary(ViewData) {
		{ "ShowRolesColumn", false },
		{ "ShowActionColumn", true },
		{ "ShowFullActions", false }
		})

				<div class="d-flex justify-content-center mt-3">
					@Html.PagedListPager(Model.Customers, page => Url.Action("Details",
									new
									{
										productName = Model.Product.ProductName,
										cPage = page,
										sPage = Model.CurrentSuppliersPage,
										activeTab = "customers"
									}),
									new PagedListRenderOptions
			{
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				UlElementClasses = new[] { "pagination", "pagination-sm" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
				ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
			})
				</div>
			}
			else
			{
				<p class="text-muted">Цей товар ще ніхто не купував.</p>
			}
		</div>

		<div class="tab-pane fade @(activeTab == "suppliers" ? "show active" : "")" id="nav-suppliers" role="tabpanel" aria-labelledby="nav-suppliers-tab" tabindex="0">
			<h4>Контрагенти, що постачали цей товар</h4>
			<hr />
			@if (Model.Suppliers != null && Model.Suppliers.Any())
			{
				@await Html.PartialAsync("_CounterpartyTablePartial", Model.Customers,
							new ViewDataDictionary(ViewData) {
		{ "ShowRolesColumn", false },
		{ "ShowActionColumn", true },
		{ "ShowFullActions", false }
		})

				<div class="d-flex justify-content-center mt-3">
					@Html.PagedListPager(Model.Suppliers, page => Url.Action("Details",
									new
									{
										productName = Model.Product.ProductName,
										cPage = Model.CurrentCustomersPage,
										sPage = page,
										activeTab = "suppliers"
									}),
									new PagedListRenderOptions
			{
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				UlElementClasses = new[] { "pagination", "pagination-sm" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
				ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
			})
				</div>
			}
			else
			{
				<p class="text-muted">Немає даних про постачальників цього товару.</p>
			}
		</div>

	</div>

}
else
{
	<h4>Основна інформація</h4>
	<hr />
	@await Html.PartialAsync("_ProductInfoPartial", Model.Product)
}

<div class="mt-4">
	<a asp-action="Index" class="btn btn-outline-secondary">Назад до списку товарів</a>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}