@model X.PagedList.IPagedList<IMS.Models.StorageProduct>
@using IMS.Models
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
	ViewData["Title"] = "Загальні залишки по товарах";
	Layout = "_Layout";
}

<h1>@ViewData["Title"]</h1>

<div class="d-flex justify-content-between align-items-center mb-3">
	<button class="btn btn-secondary btn-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasFilters" aria-controls="offcanvasFilters">
		<i class="bi bi-funnel"></i> Фільтри / Пошук
	</button>
</div>

<table class="table table-sm table-hover table-striped">
	<thead class="table-light">
		<tr>
			<th>@Html.DisplayNameFor(model => model.FirstOrDefault().ProductName)</th>
			<th>@Html.DisplayNameFor(model => model.FirstOrDefault().Count)</th>
			<th>@Html.DisplayNameFor(model => model.FirstOrDefault().MinimalCount)</th>
			<th>Одиниця виміру</th>
		</tr>
	</thead>
	<tbody>
		@if (Model.Any())
		{
			@foreach (var item in Model) 
			{
				<tr data-storage-name="@item.StorageName" data-product-name="@item.ProductName">
					<td>@Html.DisplayFor(modelItem => item.ProductName)</td>
					<td>@item.Count.ToString("N2")</td> 
					<td class="min-count-td">
						<span class="min-count-display">@item.MinimalCount.ToString("N2")</span>
						<div class="min-count-edit input-group input-group-sm" style="display: none;">
							<input type="text" class="form-control min-count-input" value="@item.MinimalCount.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)" />
							<button class="btn btn-success min-count-save" type="button"><i class="bi bi-check-lg"></i></button>
							<button class="btn btn-secondary min-count-cancel" type="button"><i class="bi bi-x-lg"></i></button>
						</div>
						<button class="btn btn-link btn-sm edit-min-inline-btn p-0 ms-1 align-baseline" type="button"><i class="bi bi-pencil-square"></i></button>
						<div class="min-count-error text-danger small" style="display: none;"></div>
					</td>
					<td>@item.ProductNameNavigation?.UnitCodeNavigation?.UnitName</td>
				</tr>
			}
		}
		else
		{
			<tr><td colspan="4" class="text-center text-muted">Товарів за вашим запитом не знайдено.</td></tr>
		}
	</tbody>
</table>

<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasFilters" aria-labelledby="offcanvasFiltersLabel">
	<div class="offcanvas-header border-bottom">
		<h5 class="offcanvas-title" id="offcanvasFiltersLabel">Фільтри та Пошук Товарів</h5>
		<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
	</div>
	<div class="offcanvas-body">
		<form asp-action="Index" method="get" id="keeperFilterForm">
			<div class="mb-3 position-relative">
				<label for="searchStringInput" class="form-label fw-semibold">Пошук за назвою товару</label>
				<input type="text" id="searchStringInput" name="searchString" value="@ViewData["CurrentSearch"]"
					   class="form-control form-control-sm" autocomplete="off"
					   data-autocomplete="true"
					   data-autocomplete-url="@Url.Action("AutocompleteStockProductName", "StorageProduct")"
					   data-autocomplete-min-length="2"
					   data-autocomplete-list-target="#stockProductNameAutocompleteList" />
				<ul id="stockProductNameAutocompleteList" class="list-group position-absolute w-100 mt-1" style="z-index: 1050; display: none;"></ul>
			</div>
			<div class="mb-3">
				<label for="unitFilterSelect" class="form-label fw-semibold">Фільтр за од. вим.</label>
				<select id="unitFilterSelect" name="filterUnitName" asp-items="@ViewBag.UnitNameFilterList" class="form-select form-select-sm">
					<option value="">-- Всі одиниці --</option>
				</select>
			</div>

			<div class="d-grid gap-2 mt-4">
				<button type="submit" class="btn btn-primary">Застосувати</button>
				<button type="button" class="btn btn-outline-secondary"
						data-reset-form-target="#keeperFilterForm">
					Скинути Все
				</button>
			</div>
		</form>
	</div>
</div>

<div class="d-flex justify-content-center mt-3">
	@Html.PagedListPager(Model, page => Url.Action("Index",
			new
			{
				page = page,
				searchString = ViewData["CurrentSearch"],        
				filterUnitName = ViewData["CurrentUnitFilter"]
			}),
			new PagedListRenderOptions
	{
		LiElementClasses = new[] { "page-item" },
		PageClasses = new[] { "page-link" },
		UlElementClasses = new[] { "pagination", "pagination-sm" },
		DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
		DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
		DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
		DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
		ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
	})
</div>

@Html.AntiForgeryToken()

@section Scripts {
	<script>
		$(document).ready(function () {
			$('table').on('click', '.edit-min-inline-btn', function () {
				var td = $(this).closest('tr').find('td.min-count-td');
				td.find('.min-count-display').hide();
				td.find('.min-count-edit').show();
				td.find('.min-count-input').focus().select();
				td.find('.min-count-error').hide().text('');
			});

			$('table').on('click', '.min-count-cancel', function () {
				var td = $(this).closest('td.min-count-td');
				td.find('.min-count-edit').hide();
				td.find('.min-count-display').show();
				td.find('.min-count-error').hide().text('');
			});

			$('table').on('click', '.min-count-save', function () {
				var saveButton = $(this);
				var td = saveButton.closest('td.min-count-td');
				var editDiv = td.find('.min-count-edit');
				var displaySpan = td.find('.min-count-display');
				var errorDiv = td.find('.min-count-error');
				var inputField = editDiv.find('.min-count-input');
				var tr = td.closest('tr');

				var storageName = tr.data('storage-name');
				var productName = tr.data('product-name');
			   var newValue = inputField.val()?.replace(',', '.');

				errorDiv.hide().text('');
				if (newValue === '' || newValue === null || isNaN(parseFloat(newValue)) || parseFloat(newValue) < 0) {
					 errorDiv.text('Введіть коректне невід\'ємне число.').show();
					 return;
				}

				var token = $('input[name="__RequestVerificationToken"]').val();
				var postUrl = "@Url.Action("EditMinimalCountOnly", "StorageProduct")";

				var dataToSend = {
					StorageName: storageName,
					ProductName: productName,
					MinimalCount: newValue,
					 __RequestVerificationToken: token
				};

				console.log("Sending AJAX Data:", dataToSend);

				saveButton.prop('disabled', true);

				$.ajax({
					url: postUrl,
					method: "POST",
					data: dataToSend,
					success: function (response) {
						console.log("AJAX Success:", response);
						if (response.success) {
							 var formattedValue = parseFloat(response.newMinimalCount).toLocaleString('uk-UA', {
								 minimumFractionDigits: 2,
								 maximumFractionDigits: 2
							 });
							displaySpan.text(formattedValue);
							editDiv.hide();
							displaySpan.show();
						} else {
							var errorMessage = response.message || "Помилка збереження.";
							 if(response.errors && response.errors.length > 0) {
								  errorMessage += ": " + response.errors.join("; ");
							 }
							errorDiv.text(errorMessage).show();
						}
					},
					error: function (jqXHR, textStatus, errorThrown) {
						console.error("AJAX Error: " + textStatus + " - " + errorThrown);
						console.error("Server Response: ", jqXHR.responseText);
						errorDiv.text('Помилка зв\'язку з сервером.').show();
					},
					complete: function() {
						saveButton.prop('disabled', false);
					}
				});
			});
		});
	</script>
 }