@model X.PagedList.IPagedList<IMS.Models.Invoice>
@using IMS.Models
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
    ViewData["Title"] = "Invoices"; // Translated
    Layout = "_Layout";
    bool canManage = User.IsInRole(UserRole.manager.ToString()) || User.IsInRole(UserRole.owner.ToString());
    var currentInvoiceType = ViewData["CurrentInvoiceType"] as string;
}

<h1>@ViewData["Title"]</h1>

@* Оновлена Панель Дій *@
<div class="p-3 mb-3 bg-light border rounded-3 d-flex justify-content-between align-items-center">
    @if (canManage)
    {
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle me-1"></i>Create New Invoice @* Translated & Icon *@
        </a>
    }
    else
    {
        <span></span> @* Placeholder for alignment *@
    }

    <button class="btn btn-secondary btn-sm" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasFilters" aria-controls="offcanvasFilters">
        <i class="bi bi-funnel"></i> Filters / Search @* Translated *@
    </button>
</div>

@* --- Offcanvas для фільтрів (з перекладом) --- *@
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasFilters" aria-labelledby="offcanvasFiltersLabel">
    <div class="offcanvas-header border-bottom">
        <h5 class="offcanvas-title" id="offcanvasFiltersLabel">Invoice Filters</h5> @* Translated *@
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form asp-action="Index" method="get" id="invoiceFilterForm">
            <input type="hidden" name="invoiceType" id="invoiceTypeFilterInput" value="@currentInvoiceType" />

            <div class="mb-2">
                <label for="fs" class="form-label fw-semibold">Status</label> @* Translated *@
                <select id="fs" name="filterStatus" asp-items="@ViewBag.StatusFilterList" class="form-select form-select-sm">
                    <option value="">-- All Statuses --</option> @* Translated *@
                </select>
            </div>

            <div class="mb-2 position-relative">
                <label for="fcp" class="form-label fw-semibold">Counterparty</label> @* Translated *@
                <input type="text" id="fcp" name="filterCounterpartyName" value="@ViewData["CurrentCounterpartyFilter"]"
                       class="form-control form-control-sm" autocomplete="off"
                       data-autocomplete="true"
                       data-autocomplete-url="@Url.Action("AutocompleteCounterpartyName", "Invoice")"
                       data-autocomplete-min-length="2"
                       data-autocomplete-list-target="#invoiceCounterpartyAutocompleteList" />
                <ul id="invoiceCounterpartyAutocompleteList" class="list-group position-absolute w-100 mt-1" style="z-index: 1050; display: none;"></ul>
            </div>

            <div class="mb-2 position-relative">
                <label for="fss" class="form-label fw-semibold">Sender Storage</label> @* Translated *@
                <input type="text" id="fss" name="filterSenderStorage" value="@ViewData["CurrentSenderStorageFilter"]"
                       class="form-control form-control-sm" autocomplete="off"
                       data-autocomplete="true"
                       data-autocomplete-url="@Url.Action("AutocompleteStorageName", "Invoice")"
                       data-autocomplete-min-length="2"
                       data-autocomplete-list-target="#invoiceSenderStorageAutocompleteList" />
                <ul id="invoiceSenderStorageAutocompleteList" class="list-group position-absolute w-100 mt-1" style="z-index: 1050; display: none;"></ul>
            </div>

            <div class="mb-2 position-relative">
                <label for="frs" class="form-label fw-semibold">Receiver Storage</label> @* Translated *@
                <input type="text" id="frs" name="filterReceiverStorage" value="@ViewData["CurrentReceiverStorageFilter"]"
                       class="form-control form-control-sm" autocomplete="off"
                       data-autocomplete="true"
                       data-autocomplete-url="@Url.Action("AutocompleteStorageName", "Invoice")"
                       data-autocomplete-min-length="2"
                       data-autocomplete-list-target="#invoiceReceiverStorageAutocompleteList" />
                <ul id="invoiceReceiverStorageAutocompleteList" class="list-group position-absolute w-100 mt-1" style="z-index: 1050; display: none;"></ul>
            </div>

            <div class="mb-2">
                <label for="df" class="form-label fw-semibold">Date From</label> @* Translated *@
                <input type="date" id="df" name="filterDateFrom" value="@ViewData["CurrentDateFromFilter"]" class="form-control form-control-sm" />
            </div>
            <div class="mb-3">
                <label for="dt" class="form-label fw-semibold">Date To</label> @* Translated *@
                <input type="date" id="dt" name="filterDateTo" value="@ViewData["CurrentDateToFilter"]" class="form-control form-control-sm" />
            </div>

            <div class="d-grid gap-2 mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-lg me-1"></i>Apply @* Translated & Icon *@
                </button>
                <button type="button" class="btn btn-outline-secondary" data-reset-form-target="#invoiceFilterForm">
                    <i class="bi bi-arrow-clockwise me-1"></i>Reset All @* Translated & Icon *@
                </button>
            </div>
        </form>
    </div>
</div>

@* --- Навігація по вкладках (перекладено) --- *@
<nav class="mt-3">
    <div class="nav nav-tabs" id="invoice-type-tab" role="tablist">
        <button class="nav-link @(string.IsNullOrEmpty(currentInvoiceType) ? "active" : "")" id="nav-all-tab" data-bs-toggle="tab" data-bs-target="#nav-table-content" type="button" role="tab" aria-selected="@(string.IsNullOrEmpty(currentInvoiceType))" data-invoice-type="">All</button> @* Translated *@
        <button class="nav-link @(currentInvoiceType == nameof(InvoiceType.supply) ? "active" : "")" id="nav-supply-tab" data-bs-toggle="tab" data-bs-target="#nav-table-content" type="button" role="tab" aria-selected="@(currentInvoiceType == nameof(InvoiceType.supply))" data-invoice-type="@nameof(InvoiceType.supply)">Supply</button> @* Translated *@
        <button class="nav-link @(currentInvoiceType == nameof(InvoiceType.release) ? "active" : "")" id="nav-release-tab" data-bs-toggle="tab" data-bs-target="#nav-table-content" type="button" role="tab" aria-selected="@(currentInvoiceType == nameof(InvoiceType.release))" data-invoice-type="@nameof(InvoiceType.release)">Release</button> @* Translated *@
        <button class="nav-link @(currentInvoiceType == nameof(InvoiceType.transfer) ? "active" : "")" id="nav-transfer-tab" data-bs-toggle="tab" data-bs-target="#nav-table-content" type="button" role="tab" aria-selected="@(currentInvoiceType == nameof(InvoiceType.transfer))" data-invoice-type="@nameof(InvoiceType.transfer)">Transfer</button> @* Translated *@
    </div>
</nav>

@* --- Контент вкладок --- *@
<div class="tab-content pt-3" id="invoice-type-tabContent">
    <div class="tab-pane fade show active" id="nav-table-content" role="tabpanel" tabindex="0">
        @if (Model != null && Model.Any()) // Додано перевірку Model на null
        {
            @* Переконайтесь, що _InvoiceTablePartial також перекладено та має потрібні класи *@
            @await Html.PartialAsync("_InvoiceTablePartial", Model)
        }
        else
        {
            <p class="text-center text-muted mt-3">No invoices found matching your criteria.</p> @* Translated *@
        }
    </div>
</div>

@* --- Пагінатор --- *@
<div class="d-flex justify-content-center mt-3">
    @Html.PagedListPager(Model, page => Url.Action("Index",
            new
            {
                page = page,
                invoiceType = currentInvoiceType,
                filterStatus = ViewData["CurrentStatusFilter"],
                filterDateFrom = ViewData["CurrentDateFromFilter"],
                filterDateTo = ViewData["CurrentDateToFilter"],
                filterCounterpartyName = ViewData["CurrentCounterpartyFilter"],
                filterSenderStorage = ViewData["CurrentSenderStorageFilter"],
                filterReceiverStorage = ViewData["CurrentReceiverStorageFilter"]
            }),
            new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        UlElementClasses = new[] { "pagination", "pagination-sm" },
        DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
        DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
        ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
    })
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
@* Скрипт для вкладок залишається, бо він керує відправкою форми *@
    <script>
        $(document).ready(function(){
            $('.nav-tabs button[data-bs-toggle="tab"]').on('click', function (e) {
                var invoiceType = $(this).data('invoice-type');
                $('#invoiceTypeFilterInput').val(invoiceType);
                var form = $('#invoiceFilterForm');
                 var actionUrl = form.attr('action');
                 if (actionUrl) {
                     actionUrl = actionUrl.split('?')[0];
                     form.attr('action', actionUrl);
                 }
                form.submit();
            });
        });
    </script>
}