@model IMS.ViewModels.CounterpartyDetailsViewModel
@using IMS.Models
@using X.PagedList.Mvc.Core
@using X.PagedList

@{
	ViewData["Title"] = $"Деталі: {Model.Counterparty.Name}";
	Layout = "_Layout";
	bool canManage = User.IsInRole(UserRole.manager.ToString()) || User.IsInRole(UserRole.owner.ToString());
	bool isSupplier = Model.IsSupplier;
	bool isCustomer = Model.IsCustomer;
	var activeTab = ViewData["ActiveTab"] as string ?? "info";
}

<h1>Контрагент: @Model.Counterparty.Name</h1>

<nav class="mt-3">
	<div class="nav nav-tabs" id="nav-tab" role="tablist">
		<button class="nav-link @(activeTab == "info" ? "active" : "")" id="nav-info-tab" data-bs-toggle="tab" data-bs-target="#nav-info" type="button" role="tab" aria-controls="nav-info" aria-selected="@(activeTab == "info")">Інформація</button>
		<button class="nav-link @(activeTab == "invoices" ? "active" : "")" id="nav-invoices-tab" data-bs-toggle="tab" data-bs-target="#nav-invoices" type="button" role="tab" aria-controls="nav-invoices" aria-selected="@(activeTab == "invoices")">Накладні</button>
		@if (isSupplier)
		{
			<button class="nav-link @(activeTab == "supplied" ? "active" : "")" id="nav-supplied-tab" data-bs-toggle="tab" data-bs-target="#nav-supplied" type="button" role="tab" aria-controls="nav-supplied" aria-selected="@(activeTab == "supplied")">Товари, що постачає</button>
		}
		@if (isCustomer)
		{
			<button class="nav-link @(activeTab == "purchased" ? "active" : "")" id="nav-purchased-tab" data-bs-toggle="tab" data-bs-target="#nav-purchased" type="button" role="tab" aria-controls="nav-purchased" aria-selected="@(activeTab == "purchased")">Товари, що закуповує</button>
		}
	</div>
</nav>

<div class="tab-content pt-3" id="nav-tabContent">

	<div class="tab-pane fade @(activeTab == "info" ? "show active" : "")" id="nav-info" role="tabpanel" aria-labelledby="nav-info-tab" tabindex="0">
		<h4>Інформація</h4>
		<hr />
		<dl class="row">
			<dt class="col-sm-3">@Html.DisplayNameFor(model => model.Counterparty.Name)</dt>
			<dd class="col-sm-9">@Html.DisplayFor(model => model.Counterparty.Name)</dd>

			<dt class="col-sm-3">@Html.DisplayNameFor(model => model.Counterparty.PhoneNumber)</dt>
			<dd class="col-sm-9">@Html.DisplayFor(model => model.Counterparty.PhoneNumber)</dd>

			<dt class="col-sm-3">@Html.DisplayNameFor(model => model.Counterparty.Email)</dt>
			<dd class="col-sm-9">@Html.DisplayFor(model => model.Counterparty.Email)</dd>

			<dt class="col-sm-3">Призначені Ролі</dt>
			<dd class="col-sm-9">
				@if (Model.Counterparty.Roles != null && Model.Counterparty.Roles.Any())
				{
					@foreach (var role in Model.Counterparty.Roles.OrderBy(r => r.Name))
					{
						string badgeClass = "text-bg-secondary";
						switch (role.Name?.ToLowerInvariant())
						{
							case "supplier": badgeClass = "text-bg-primary"; break;
							case "customer": badgeClass = "text-bg-success"; break;
						}
						<span class="badge rounded-pill @badgeClass me-1" style="font-size: 0.8em;">@role.Name</span>
					}
				}
				else
				{
					<span class="text-muted">Ролі не призначено.</span>
				}
			</dd>
		</dl>
		<div class="mt-3">
			<a asp-action="Edit" asp-route-name="@Model.Counterparty.Name" class="btn btn-secondary btn-sm">Редагувати Дані та Ролі</a>
		</div>
	</div>

	<div class="tab-pane fade @(activeTab == "invoices" ? "show active" : "")" id="nav-invoices" role="tabpanel" aria-labelledby="nav-invoices-tab" tabindex="0">
		<div class="d-flex justify-content-between align-items-center mb-2">
			<h4>Історія накладних</h4>
			<a asp-controller="Invoice" asp-action="Create" asp-route-counterpartyName="@Model.Counterparty.Name" class="btn btn-success btn-sm">Створити накладну</a>
		</div>
		<hr />
		@if (Model.RelatedInvoices?.Any() ?? false)
		{
			@await Html.PartialAsync("_InvoiceTablePartial", Model.RelatedInvoices)

			<div class="d-flex justify-content-center mt-3">
				@Html.PagedListPager(Model.RelatedInvoices, page => Url.Action("Details",
								new
								{
									name = Model.Counterparty.Name,
									iPage = page,
									spPage = Model.CurrentSuppliedProductsPage,
									ppPage = Model.CurrentPurchasedProductsPage,
									activeTab = "invoices"
								}),
								new PagedListRenderOptions
			{
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				UlElementClasses = new[] { "pagination", "pagination-sm" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
				ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
			})
			</div>
		}
		else
		{
			<p class="text-muted">З цим контрагентом ще немає пов'язаних накладних.</p>
		}
	</div>

	@if (isSupplier)
	{
		<div class="tab-pane fade @(activeTab == "supplied" ? "show active" : "")" id="nav-supplied" role="tabpanel" aria-labelledby="nav-supplied-tab" tabindex="0">
			<h4>Товари, що постачає цей контрагент</h4>
			<hr />
			@if (Model.SuppliedProducts?.Any() ?? false)
			{
				<table class="table table-sm table-striped">
					<thead class="table-light">
						<tr>
							<th>Назва товару</th>
							<th>Од. вим.</th>
							<th>Остання ціна</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var product in Model.SuppliedProducts)
						{
							<tr>
								<td>

									@product.ProductName
								</td>
								<td>@(product.UnitCodeNavigation?.UnitName ?? "Н/Д")</td>
								<td>@product.LastPrice.ToString("C2")</td>
							</tr>
						}
					</tbody>
				</table>
				<div class="d-flex justify-content-center mt-3">
					@Html.PagedListPager(Model.SuppliedProducts, page => Url.Action("Details",
									new
									{
										name = Model.Counterparty.Name,
										iPage = Model.CurrentInvoicesPage,
										spPage = page,
										ppPage = Model.CurrentPurchasedProductsPage,
										activeTab = "supplied"
									}),
									new PagedListRenderOptions
			{
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				UlElementClasses = new[] { "pagination", "pagination-sm" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
				ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
			})
				</div>
			}
			else
			{
				<p class="text-muted">Немає даних про товари, що постачалися цим контрагентом.</p>
			}
		</div>
	}

	@if (isCustomer)
	{
		<div class="tab-pane fade @(activeTab == "purchased" ? "show active" : "")" id="nav-purchased" role="tabpanel" aria-labelledby="nav-purchased-tab" tabindex="0">
			<h4>Товари, що закуповує цей контрагент</h4>
			<hr />
			@if (Model.PurchasedProducts?.Any() ?? false)
			{
				<table class="table table-sm table-striped">
					<thead class="table-light">
						<tr>
							<th>Назва товару</th>
							<th>Од. вим.</th>
							<th>Остання ціна</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var product in Model.PurchasedProducts)
						{
							<tr>
								<td>
									@product.ProductName
								</td>
								<td>@(product.UnitCodeNavigation?.UnitName ?? "Н/Д")</td>
								<td>@product.LastPrice.ToString("C2")</td>
							</tr>
						}
					</tbody>
				</table>
				<div class="d-flex justify-content-center mt-3">
					@Html.PagedListPager(Model.PurchasedProducts, page => Url.Action("Details",
									new
									{
										name = Model.Counterparty.Name,
										iPage = Model.CurrentInvoicesPage,
										spPage = Model.CurrentSuppliedProductsPage,
										ppPage = page,
										activeTab = "purchased"
									}),
									new PagedListRenderOptions
			{
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" },
				UlElementClasses = new[] { "pagination", "pagination-sm" },
				DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
				DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
				ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
			})
				</div>
			}
			else
			{
				<p class="text-muted">Немає даних про товари, що закуповувалися цим контрагентом.</p>
			}
		</div>
	}

</div>


<div class="mt-4">
	<a asp-controller="Counterparty" asp-action="Index" class="btn btn-outline-secondary">Назад до списку контрагентів</a>
</div>